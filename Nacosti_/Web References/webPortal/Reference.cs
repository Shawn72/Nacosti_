//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Nacosti_.webPortal {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PortalCodeunit_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit")]
    public partial class PortalCodeunit : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateDirectorPayslipOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgotPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRegisterBoardOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnMeetingsTodayOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnInsertCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerateMeetingResolutionsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PortalCodeunit() {
            this.Url = global::Nacosti_.Properties.Settings.Default.Nacosti__webPortal_PortalCodeunit;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnLoginCompletedEventHandler FnLoginCompleted;
        
        /// <remarks/>
        public event GenerateDirectorPayslipCompletedEventHandler GenerateDirectorPayslipCompleted;
        
        /// <remarks/>
        public event ForgotPassCompletedEventHandler ForgotPassCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event GetItemImageCompletedEventHandler GetItemImageCompleted;
        
        /// <remarks/>
        public event FnRegisterBoardCompletedEventHandler FnRegisterBoardCompleted;
        
        /// <remarks/>
        public event FnMeetingsTodayCompletedEventHandler FnMeetingsTodayCompleted;
        
        /// <remarks/>
        public event FnInsertCommentCompletedEventHandler FnInsertCommentCompleted;
        
        /// <remarks/>
        public event GenerateMeetingResolutionsCompletedEventHandler GenerateMeetingResolutionsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:FnLogin", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="FnLogin_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnLogin(string customerNumber, string password) {
            object[] results = this.Invoke("FnLogin", new object[] {
                        customerNumber,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnLoginAsync(string customerNumber, string password) {
            this.FnLoginAsync(customerNumber, password, null);
        }
        
        /// <remarks/>
        public void FnLoginAsync(string customerNumber, string password, object userState) {
            if ((this.FnLoginOperationCompleted == null)) {
                this.FnLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnLoginOperationCompleted);
            }
            this.InvokeAsync("FnLogin", new object[] {
                        customerNumber,
                        password}, this.FnLoginOperationCompleted, userState);
        }
        
        private void OnFnLoginOperationCompleted(object arg) {
            if ((this.FnLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnLoginCompleted(this, new FnLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:GenerateDirectorPayslip", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="GenerateDirectorPayslip_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateDirectorPayslip(string director, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime payperiod) {
            object[] results = this.Invoke("GenerateDirectorPayslip", new object[] {
                        director,
                        payperiod});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateDirectorPayslipAsync(string director, System.DateTime payperiod) {
            this.GenerateDirectorPayslipAsync(director, payperiod, null);
        }
        
        /// <remarks/>
        public void GenerateDirectorPayslipAsync(string director, System.DateTime payperiod, object userState) {
            if ((this.GenerateDirectorPayslipOperationCompleted == null)) {
                this.GenerateDirectorPayslipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateDirectorPayslipOperationCompleted);
            }
            this.InvokeAsync("GenerateDirectorPayslip", new object[] {
                        director,
                        payperiod}, this.GenerateDirectorPayslipOperationCompleted, userState);
        }
        
        private void OnGenerateDirectorPayslipOperationCompleted(object arg) {
            if ((this.GenerateDirectorPayslipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateDirectorPayslipCompleted(this, new GenerateDirectorPayslipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:ForgotPass", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="ForgotPass_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ForgotPass(string registrationNo) {
            object[] results = this.Invoke("ForgotPass", new object[] {
                        registrationNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ForgotPassAsync(string registrationNo) {
            this.ForgotPassAsync(registrationNo, null);
        }
        
        /// <remarks/>
        public void ForgotPassAsync(string registrationNo, object userState) {
            if ((this.ForgotPassOperationCompleted == null)) {
                this.ForgotPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgotPassOperationCompleted);
            }
            this.InvokeAsync("ForgotPass", new object[] {
                        registrationNo}, this.ForgotPassOperationCompleted, userState);
        }
        
        private void OnForgotPassOperationCompleted(object arg) {
            if ((this.ForgotPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgotPassCompleted(this, new ForgotPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:ChangePassword", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="ChangePassword_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ChangePassword(string customerNo, string currentPassword, string newPassword, string confirmNewPassword) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        customerNo,
                        currentPassword,
                        newPassword,
                        confirmNewPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string customerNo, string currentPassword, string newPassword, string confirmNewPassword) {
            this.ChangePasswordAsync(customerNo, currentPassword, newPassword, confirmNewPassword, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string customerNo, string currentPassword, string newPassword, string confirmNewPassword, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        customerNo,
                        currentPassword,
                        newPassword,
                        confirmNewPassword}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:GetItemImage", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="GetItemImage_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GetItemImage(string custNo) {
            object[] results = this.Invoke("GetItemImage", new object[] {
                        custNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemImageAsync(string custNo) {
            this.GetItemImageAsync(custNo, null);
        }
        
        /// <remarks/>
        public void GetItemImageAsync(string custNo, object userState) {
            if ((this.GetItemImageOperationCompleted == null)) {
                this.GetItemImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemImageOperationCompleted);
            }
            this.InvokeAsync("GetItemImage", new object[] {
                        custNo}, this.GetItemImageOperationCompleted, userState);
        }
        
        private void OnGetItemImageOperationCompleted(object arg) {
            if ((this.GetItemImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemImageCompleted(this, new GetItemImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:FnRegisterBoard", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="FnRegisterBoard_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnRegisterBoard(string idNumber) {
            object[] results = this.Invoke("FnRegisterBoard", new object[] {
                        idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRegisterBoardAsync(string idNumber) {
            this.FnRegisterBoardAsync(idNumber, null);
        }
        
        /// <remarks/>
        public void FnRegisterBoardAsync(string idNumber, object userState) {
            if ((this.FnRegisterBoardOperationCompleted == null)) {
                this.FnRegisterBoardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegisterBoardOperationCompleted);
            }
            this.InvokeAsync("FnRegisterBoard", new object[] {
                        idNumber}, this.FnRegisterBoardOperationCompleted, userState);
        }
        
        private void OnFnRegisterBoardOperationCompleted(object arg) {
            if ((this.FnRegisterBoardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegisterBoardCompleted(this, new FnRegisterBoardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:FnMeetingsToday", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="FnMeetingsToday_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnMeetingsToday(string directorNo) {
            object[] results = this.Invoke("FnMeetingsToday", new object[] {
                        directorNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnMeetingsTodayAsync(string directorNo) {
            this.FnMeetingsTodayAsync(directorNo, null);
        }
        
        /// <remarks/>
        public void FnMeetingsTodayAsync(string directorNo, object userState) {
            if ((this.FnMeetingsTodayOperationCompleted == null)) {
                this.FnMeetingsTodayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnMeetingsTodayOperationCompleted);
            }
            this.InvokeAsync("FnMeetingsToday", new object[] {
                        directorNo}, this.FnMeetingsTodayOperationCompleted, userState);
        }
        
        private void OnFnMeetingsTodayOperationCompleted(object arg) {
            if ((this.FnMeetingsTodayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnMeetingsTodayCompleted(this, new FnMeetingsTodayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:FnInsertComment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="FnInsertComment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnInsertComment(string meetingCode, string directorNo, string commentText) {
            object[] results = this.Invoke("FnInsertComment", new object[] {
                        meetingCode,
                        directorNo,
                        commentText});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnInsertCommentAsync(string meetingCode, string directorNo, string commentText) {
            this.FnInsertCommentAsync(meetingCode, directorNo, commentText, null);
        }
        
        /// <remarks/>
        public void FnInsertCommentAsync(string meetingCode, string directorNo, string commentText, object userState) {
            if ((this.FnInsertCommentOperationCompleted == null)) {
                this.FnInsertCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnInsertCommentOperationCompleted);
            }
            this.InvokeAsync("FnInsertComment", new object[] {
                        meetingCode,
                        directorNo,
                        commentText}, this.FnInsertCommentOperationCompleted, userState);
        }
        
        private void OnFnInsertCommentOperationCompleted(object arg) {
            if ((this.FnInsertCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnInsertCommentCompleted(this, new FnInsertCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit:GenerateMeetingResolutions" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", ResponseElementName="GenerateMeetingResolutions_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalCodeunit", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string GenerateMeetingResolutions(string meetingCode) {
            object[] results = this.Invoke("GenerateMeetingResolutions", new object[] {
                        meetingCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GenerateMeetingResolutionsAsync(string meetingCode) {
            this.GenerateMeetingResolutionsAsync(meetingCode, null);
        }
        
        /// <remarks/>
        public void GenerateMeetingResolutionsAsync(string meetingCode, object userState) {
            if ((this.GenerateMeetingResolutionsOperationCompleted == null)) {
                this.GenerateMeetingResolutionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerateMeetingResolutionsOperationCompleted);
            }
            this.InvokeAsync("GenerateMeetingResolutions", new object[] {
                        meetingCode}, this.GenerateMeetingResolutionsOperationCompleted, userState);
        }
        
        private void OnGenerateMeetingResolutionsOperationCompleted(object arg) {
            if ((this.GenerateMeetingResolutionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerateMeetingResolutionsCompleted(this, new GenerateMeetingResolutionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnLoginCompletedEventHandler(object sender, FnLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GenerateDirectorPayslipCompletedEventHandler(object sender, GenerateDirectorPayslipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateDirectorPayslipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateDirectorPayslipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ForgotPassCompletedEventHandler(object sender, ForgotPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgotPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgotPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetItemImageCompletedEventHandler(object sender, GetItemImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnRegisterBoardCompletedEventHandler(object sender, FnRegisterBoardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRegisterBoardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRegisterBoardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnMeetingsTodayCompletedEventHandler(object sender, FnMeetingsTodayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnMeetingsTodayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnMeetingsTodayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void FnInsertCommentCompletedEventHandler(object sender, FnInsertCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnInsertCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnInsertCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GenerateMeetingResolutionsCompletedEventHandler(object sender, GenerateMeetingResolutionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GenerateMeetingResolutionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GenerateMeetingResolutionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591